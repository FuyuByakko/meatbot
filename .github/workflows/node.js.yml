# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master, test ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
  
  pack:
          
    needs: build
          
    runs-on: ubuntu-latest
      
    steps:
      - uses: actions/checkout@v2

      - name: Build zip
        run: |
          mkdir lambda-content
          cp -r ./actions lambda-content/actions
          cp -r ./lib lambda-content/lib
          cp ./lambda-handler.js lambda-content/lambda-handler.js
          cp ./package.json lambda-content/package.json
          var=$(date +"%FORMAT_STRING")
          now=$(date +"%m_%d_%Y_%H_%M")
          printf "%s\n" $now
          today=$(date +"%Y-%m-%d-%H-%M")
          mkdir source
          zip -r ./source/${today}-meatbot-source.zip lambda-content
          echo "$today zip created!"
      
      -name: Upload to S3
        uses: shallwefootball/s3-upload-action@master
        with:
          aws_key_id: ${{ secrets.AWS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws_bucket: ${{ secrets.AWS_BUCKET }}
          source_dir: ./source/
          destination_dir: ${{ secrets.AWS_BUCKET_DESTINATION }}
        run: rm -rf lambda-content source 
